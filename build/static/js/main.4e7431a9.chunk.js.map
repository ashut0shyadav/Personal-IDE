{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","className","concat","type","onClick","prevOpen","index_es","icon","faCompressAlt","faExpandAlt","react_codemirror2","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","prefix","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e7431a9.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt} from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function Editor(props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n    } = props\n\n    const [open, setOpen] = useState(true)\n\n    function handleChange(editor, data, value) {\n        onChange(value)\n    }\n\n  return (\n    <div className={`editor-container ${open? '' : 'collapsed'}`}>\n        <div className=\"editor-title\">\n            {displayName}\n            <button\n                type = \"button\"\n                className='expand-collapse-button'\n                onClick = {() => setOpen(prevOpen => !prevOpen)} >\n                    <FontAwesomeIcon icon = {open ? faCompressAlt : faExpandAlt} />\n            </button>\n        </div>\n        <ControlledEditor \n            onBeforeChange = {handleChange}\n            value = {value}\n            className = \"code-mirror-wrapper\"\n            options = {{\n                lineWrapping: true,\n                lint: true,\n                mode: language,\n                theme: \"material\",\n                lineNumbers: true\n             }} \n        />\n    </div>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nconst prefix = 'apni-ide-'\n\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = prefix + key\n    const [ value, setValue] = useState (() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n\n        if(jsonValue != null)\n            return JSON.parse(jsonValue)\n\n        if(typeof initialValue === 'function') {\n            return initialValue()\n        }\n\n        else { \n            return initialValue\n        }\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey,JSON.stringify(value))\n    },[prefixedKey, value])\n    \n  return [value, setValue]\n}\n","import React, {useState, useEffect} from \"react\";\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html,setHtml] = useLocalStorage('html', '')\n  const [css,setCss] = useLocalStorage('css', '')\n  const [js,setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] =  useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() =>  {\n      setSrcDoc(`\n      <html> \n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n      </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html,css,js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor language=\"xml\" displayName=\"HTML\" value = {html}\n                onChange={setHtml} />\n        \n        <Editor language=\"css\" displayName=\"CSS\" value = {css}\n                onChange={setCss} />\n\n        <Editor language=\"javascript\" displayName=\"JavaScript\" value = {js}\n                onChange={setJs} />\n      </div>\n\n      <div className=\"pane\">\n        <iframe srcDoc = {srcDoc} title=\"output\" sandbox=\"allow-scripts\" \n        frameBorder=\"0\" width=\"100%\" height=\"100%\"/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}